@page
@model RazorLogin.Pages.Admin.Emp.IndexModel

@{
    ViewData["Title"] = "Employees";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
    <style>
        .table th, .table td {
            vertical-align: middle;
        }
        .table-container {
            max-width: 1200px; /* Limit table width */
            margin: auto; /* Center the table */
        }
        .container {
            margin-bottom: 70px; /* Space from footer */
        }
        .footer {
            padding: 20px; /* Space in footer */
            background-color: #f8f9fa; /* Light background color for footer */
            position: relative;
            clear: both; /* Clears floats if any */
        }
    </style>
</head>
<body>
    <div class="container mt-5">
        <h1 class="mb-4">Employees</h1>

        <p>
            <a asp-page="Create" class="btn btn-primary">Add a new employee</a>
        </p>

        <form method="get" class="form-inline mb-4">
            <div class="form-group mr-3">
                <input type="text" name="SearchTerm" value="@Model.SearchTerm" placeholder="Search by Name or ID..." class="form-control" />
            </div>
            <div class="form-group mr-3">
                <select name="RoleSearchTerm" class="form-control">
                    <option value="">Select Role...</option>
                    <option value="Manager">Manager</option>
                    <option value="Admin" >Admin</option>
                    <option value="Shop" >Shop</option>
                    <option value="Zookeeper" >Zookeeper</option>
                </select>
            </div>
            <button type="submit" class="btn btn-secondary">Search</button>
        </form>

        <div class="table-container">
            <table class="table table-bordered table-striped">
                <thead class="thead-dark">
                    <tr>
                        <th>@Html.DisplayNameFor(model => model.Employee[0].EmployeeId)</th>
                        <th>@Html.DisplayNameFor(model => model.Employee[0].EmployeeFirstName)</th>
                        <th>@Html.DisplayNameFor(model => model.Employee[0].EmployeeLastName)</th>
                        <th>@Html.DisplayNameFor(model => model.Employee[0].EmployeeSalary)</th>
                        <th>@Html.DisplayNameFor(model => model.Employee[0].Department)</th>
                        <th>@Html.DisplayNameFor(model => model.Employee[0].EmployeeEmail)</th>
                        <!--<th>@Html.DisplayNameFor(model => model.Employee[0].FoodStore)</th>
                        <th>@Html.DisplayNameFor(model => model.Employee[0].Shop)</th>
                        <th>@Html.DisplayNameFor(model => model.Employee[0].Supervisor)</th>-->
                        <th>Roles</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model.Employee.Any())
                    {
                        foreach (var item in Model.Employee)
                        {
                            <tr>
                                <td>@Html.DisplayFor(modelItem => item.EmployeeId)</td>
                                <td>@Html.DisplayFor(modelItem => item.EmployeeFirstName)</td>
                                <td>@Html.DisplayFor(modelItem => item.EmployeeLastName)</td>
                                <td>@Html.DisplayFor(modelItem => item.EmployeeSalary)</td>
                                <td>@Html.DisplayFor(modelItem => item.Department)</td>
                                <td>@Html.DisplayFor(modelItem => item.EmployeeEmail)</td>
                                <!--<td>@Html.DisplayFor(modelItem => item.FoodStore.FoodStoreId)</td>
                                <td>@Html.DisplayFor(modelItem => item.Shop.ShopId)</td>
                                <td>@Html.DisplayFor(modelItem => item.Supervisor.ManagerId)</td>-->
                                <td>
                                    @if (Model.EmployeeRoles.ContainsKey(item.EmployeeEmail))
                                    {
                                        var roles = Model.EmployeeRoles[item.EmployeeEmail];
                                        @string.Join(", ", roles)
                                    }
                                    else
                                    {
                                        <span>No roles assigned</span>
                                    }
                                </td>
                               <td class="text-center">
    <div class="btn-group" role="group">
        <a class="btn btn-sm btn-info" asp-page="./Edit" asp-route-id="@item.EmployeeId">Edit</a>
        <a class="btn btn-sm btn-primary" asp-page="./Details" asp-route-id="@item.EmployeeId">Details</a>
        <a class="btn btn-sm btn-danger" asp-page="./Delete" asp-route-id="@item.EmployeeId">Delete</a>
    </div>
</td>

                            </tr>
                        }
                    }
                    else
                    {
                        <tr>
                            <td colspan="11" class="text-center">No employees found.</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>

    <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
</body>
</html>

