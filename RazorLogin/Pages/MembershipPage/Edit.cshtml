@page
@model RazorLogin.Pages.MembershipPage.EditModel

@{
    ViewData["Title"] = "Update or Upgrade Membership";
}

<h1>Update or Upgrade Membership</h1>

<h4>Customer</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Customer.CustomerId" />
            <input type="hidden" asp-for="Customer.MembershipStartDate" id="MembershipStartDate" />
            <input type="hidden" asp-for="Customer.MembershipEndDate" id="MembershipEndDate" />

            <div>
                <label asp-for="Customer.CustomerEmail"></label>
                <input asp-for="Customer.CustomerEmail" readonly />
                <span asp-validation-for="Customer.CustomerEmail"></span>
            </div>

            <!-- Membership Type Dropdown -->
            <div class="form-group">
                <label asp-for="Customer.MembershipType" class="control-label"></label>
                <select asp-for="Customer.MembershipType" class="form-control" id="membershipDropdown" onchange="updateMembershipPrice()">
                    <option value="">Select Membership</option>
                    @foreach (var option in Model.MembershipOptions)
                    {
                        <option value="@option.Value" selected="@option.Selected">@option.Text</option>
                    }
                </select>
                <span asp-validation-for="Customer.MembershipType" class="text-danger"></span>
            </div>

            <!-- Membership Price Display -->
            <div class="form-group">
                <label>Membership Price:</label>
                <p id="membershipPrice">$0</p>
            </div>

            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-page="./Index">Back to List</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        // Update membership price display based on selected membership tier
        function updateMembershipPrice() {
            var selectedMembership = document.getElementById('membershipDropdown').value;
            var priceDisplay = document.getElementById('membershipPrice');
            var priceText = "";

            switch (selectedMembership) {
                case 'FREE TIER':
                    priceText = "$0";
                    break;
                case 'FAMILY TIER':
                    priceText = "$15 Monthly";
                    break;
                case 'VIP TIER':
                    priceText = "$25 Monthly";
                    break;
                default:
                    priceText = "$0";
            }

            priceDisplay.innerText = priceText;

            // Set membership start and end dates
            var startDate = new Date();
            var endDate = new Date();
            endDate.setFullYear(startDate.getFullYear() + 1);

            document.getElementById('MembershipStartDate').value = startDate.toISOString().split('T')[0]; // Set to current date
            document.getElementById('MembershipEndDate').value = endDate.toISOString().split('T')[0]; // Set to one year from now
        }

        window.onload = function () {
            updateMembershipPrice();
        };
    </script>
}
