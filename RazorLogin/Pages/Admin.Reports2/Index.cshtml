@page
@model RazorLogin.Pages.Admin.Reports2.IndexModel
@{
    ViewData["Title"] = "Reports";
}

<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<h2 class="mt-4">Employee Reports</h2>

<div class="container mt-4 mb-5">
    <!-- Added mb-5 for bottom margin -->
    <div class="mt-4">
        <h3>Employee Statistics</h3>
        <table class="table table-striped">
            <thead>
                <tr>
                    <th>Degree</th>
                    <th>Average Age</th>
                    <th>Min Age</th>
                    <th>Max Age</th>
                    <th>Count</th>
                </tr>
            </thead>
            <tbody>
                @if (Model.Report.EmployeeStats.Any())
                {
                    foreach (var stat in Model.Report.EmployeeStats)
                    {
                        <tr>
                            <td>@stat.Degree</td>
                            <td>@stat.AverageAge</td>
                            <td>@stat.MinAge</td>
                            <td>@stat.MaxAge</td>
                            <td>@stat.Count</td>
                        </tr>
                    }
                }
                else
                {
                    <tr>
                        <td colspan="5">No data available for Employees.</td>
                    </tr>
                }
            </tbody>
        </table>

        <h3>Manager Statistics</h3>
        <table class="table table-striped">
            <thead>
                <tr>
                    <th>Degree</th>
                    <th>Average Age</th>
                    <th>Min Age</th>
                    <th>Max Age</th>
                    <th>Count</th>
                </tr>
            </thead>
            <tbody>
                @if (Model.Report.ManagerStats.Any())
                {
                    foreach (var stat in Model.Report.ManagerStats)
                    {
                        <tr>
                            <td>@stat.Degree</td>
                            <td>@stat.AverageAge</td>
                            <td>@stat.MinAge</td>
                            <td>@stat.MaxAge</td>
                            <td>@stat.Count</td>
                        </tr>
                    }
                }
                else
                {
                    <tr>
                        <td colspan="5">No data available for Managers.</td>
                    </tr>
                }
            </tbody>
        </table>

        <h3>Zookeeper Statistics</h3>
        <table class="table table-striped">
            <thead>
                <tr>
                    <th>Degree</th>
                    <th>Average Age</th>
                    <th>Min Age</th>
                    <th>Max Age</th>
                    <th>Count</th>
                </tr>
            </thead>
            <tbody>
                @if (Model.Report.ZookeeperStats.Any())
                {
                    foreach (var stat in Model.Report.ZookeeperStats)
                    {
                        <tr>
                            <td>@stat.Degree</td>
                            <td>@stat.AverageAge</td>
                            <td>@stat.MinAge</td>
                            <td>@stat.MaxAge</td>
                            <td>@stat.Count</td>
                        </tr>
                    }
                }
                else
                {
                    <tr>
                        <td colspan="5">No data available for Zookeepers.</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

<div class="container mt-4 mb-5">
    <!-- Added mb-5 for bottom margin -->
    <a class="btn btn-primary" asp-page="/Admin/Reports2/Index">Back to Reports</a>
</div>

<script>
    // Data for average age chart
    const averageAgeData = {
        labels: ['Employees', 'Managers', 'Zookeepers'],
        datasets: [{
            label: 'Average Age',
            data: [
    @Model.Report.EmployeeStats.Any() ? Model.Report.EmployeeStats.Average(s => s.AverageAge) : 0,
    @Model.Report.ManagerStats.Any() ? Model.Report.ManagerStats.Average(s => s.AverageAge) : 0,
    @Model.Report.ZookeeperStats.Any() ? Model.Report.ZookeeperStats.Average(s => s.AverageAge) : 0
            ],
            backgroundColor: ['rgba(75, 192, 192, 0.6)', 'rgba(255, 159, 64, 0.6)', 'rgba(153, 102, 255, 0.6)']
        }]
    };

    // Data for degree count chart
    const degreeCountLabels = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.Report.DegreeCountsOverview.Keys.ToList()));
    const degreeCountData = {
        labels: degreeCountLabels,
        datasets: [{
            label: 'Count of Degrees',
            data: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.Report.DegreeCountsOverview.Values.ToList())),
            backgroundColor: 'rgba(75, 192, 192, 0.6)'
        }]
    };

    // Chart options
    const options = {
        scales: {
            y: {
                beginAtZero: true
            }
        }
    };

    // Render average age chart
    const ctx1 = document.getElementById('averageAgeChart').getContext('2d');
    new Chart(ctx1, {
        type: 'bar',
        data: averageAgeData,
        options: options
    });

    // Render degree count chart
    const ctx2 = document.getElementById('degreeCountChart').getContext('2d');
    new Chart(ctx2, {
        type: 'bar',
        data: degreeCountData,
        options: options
    });
</script>
